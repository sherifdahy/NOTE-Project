namespace ETA.Consume.Interfaces;
public interface IApiCall
{
    Task<IEnumerable<T>> GetAllAsync<T>(string url, Dictionary<string, string>? headers = null);
    Task<IEnumerable<T>> GetAllByIdAsync<T>(string url,int id, Dictionary<string, string>? headers = null);
    Task<T> GetByIdAsync<T>(string url, int id, Dictionary<string, string>? headers = null);
    Task<bool> CreateAsync<T>(string url, T entity, Dictionary<string, string>? headers = null);
    public Task<T2> PostReturnAsync<T1, T2>(string url, T1 entity, Dictionary<string, string>? headers = null);
    Task<bool> UpdateAsync<T>(string url, int id, T entity, Dictionary<string, string>? headers = null);
    Task<bool> DeleteAsync<T>(string url, int id, Dictionary<string, string>? headers = null);
}
