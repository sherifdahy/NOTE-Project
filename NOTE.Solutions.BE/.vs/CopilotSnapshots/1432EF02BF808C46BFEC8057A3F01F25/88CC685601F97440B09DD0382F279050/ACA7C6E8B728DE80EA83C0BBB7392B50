using ETA.Consume.Abstractions;
using ETA.Consume.Contracts.Auth.Requests;
using ETA.Consume.Contracts.Auth.Responses;
using ETA.Consume.Interfaces;
using Microsoft.Extensions.Configuration;

namespace ETA.Consume.Services;

public class EtaAuthService : IEtaAuthService
{
    private readonly IApiCall _apiCall;
    public EtaAuthService(IApiCall apiCall)
    {
        _apiCall = apiCall;
    }

    public async Task<Result<AuthPOSResponse>> AuthenticatePOS(AuthPOSRequest request)
    {
        var headers = new Dictionary<string, string>
        {
            { "posserial", request.POSSerial },
            { "pososversion", "Windows" }
        };

        var values = new Dictionary<string, string>
        {
            { "client_id", request.ClientId },
            { "client_secret", request.ClientSecret },
            { "grant_type", "client_credentials" }
        };

        using var content = new FormUrlEncodedContent(values);
        return await _apiCall.PostReturnAsync<AuthPOSResponse>("connect/token", content, headers);
    }
}
